apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app: db
spec:
  replicas: 3
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: postgres:14.2-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: password
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app: db
spec:
  ports:
    - port: 5432
  selector:
    app: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: desk_booking_api
          imagePullPolicy: Never
          env:
            - name: DATABASE_URL
              value: postgres://postgres:password@db:5432/postgres?schema=public
            - name: JWT_ACCESS_SECRET
              value: abcdedg
            - name: JWT_REFRESH_SECRET
              value: hijklmn
---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app: api
spec:
  ports:
    - port: 3333
  selector:
    app: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: desk_booking_app
          imagePullPolicy: Never
          env:
            - name: API_HOST
              value: api
            - name: API_PORT
              value: '3333'
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  ports:
    - port: 80
  selector:
    app: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: load-balance
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: batch/v1
kind: Job
metadata:
  name: db-migration
spec:
  backoffLimit: 1
  template:
    spec:
      initContainers:
        - name: wait-for-pg
          image: postgres:14.2-alpine
          imagePullPolicy: IfNotPresent
          command:
            [
              'sh',
              '-c',
              'until nc -vz ${POD_NAME}.${POD_NAMESPACE} 5432; do echo "Waiting for postgres..."; sleep 3; done;',
            ]
          env:
            - name: POD_NAME
              value: db
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      containers:
        - name: db-migration
          image: desk_booking_prisma_migration
          imagePullPolicy: Never
          env:
            - name: DATABASE_URL
              value: postgres://postgres:password@db:5432/postgres?schema=public
      restartPolicy: Never
