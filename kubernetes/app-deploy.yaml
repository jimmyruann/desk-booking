apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: api
          image: jimmyruann/desk_booking_api:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: DATABASE_URL
              value: $DATABASE_URL
            - name: JWT_ACCESS_SECRET
              value: $JWT_ACCESS_SECRET
            - name: JWT_REFRESH_SECRET
              value: $JWT_REFRESH_SECRET
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: frontend
          image: jimmyruann/desk_booking_app:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: API_HOST
              value: api
            - name: API_PORT
              value: '3333'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-migration
  labels:
    app: db-migration
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-migration
  template:
    metadata:
      labels:
        app: db-migration
    spec:
      containers:
        - name: db-migration
          image: jimmyruann/desk_booking_prisma_migration
          env:
            - name: DATABASE_URL
              value: $DATABASE_URL
            - name: ADMIN_INITIAL_PASSWORD
              value: $ADMIN_INITIAL_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app: api
spec:
  ports:
    - port: 3333
  selector:
    app: api
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  ports:
    - port: 80
  selector:
    app: frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: http-ingress
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 80
